
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    proxy_cache_path /home/igor/Web/cache levels=1:2 keys_zone=all:32m max_size=1g;

    upstream backend {
        server localhost:8080   weight=1;   # Все конечно круто, но нужно постоянно очищать КЭШ,
        server localhost:9090   weight=3;   # чтобы понять как это работает
    }

    add_header 'Referrer-Policy' 'origin';

    # Точка входа http-запросов. Просто перенаправляет на ssl (https)
    server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name localhost;
	return 302 https://$server_name$request_uri;
    }

    # Точка вход https-запросов
    # Основной proxy-сервер. Сжимает, кеширует запросы.
    # Раздаёт статику и перенаправляет запросы на другие сервераани
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        # Включаем сжатие
        gzip on;
        # Уровень сжатия
        gzip_comp_level 5;
        # Что-то очень важное
        # Видимо это отказ в кешировании Microsoft IE
        gzip_disable "msie6";
        # Определяем, что кешировать
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        # При обращении к корню
        location / {
            proxy_pass http://backend;                      # Указываем проксируемый блок. В нем работает 2 сервера
            proxy_cache             all;                    # Каждый запрос
            proxy_cache_valid       any 1h;                 # Хранится 1h
        }

        # STATIC
        location /hack {
            # Здесь именно alias, потому что если использовать root
            # Подразумевается, что будет каталог hack, что неправда
            alias /home/igor/Web/project/static/html;
        }

        location /index {
            alias /home/igor/Web/project/static/html;
            index hack.txt;
        }

        location /img { # для HTML должно работать
            root /home/igor/Web/project/static;
        }

        location /temp {
            root /home/igor/Web/project;
        }

        # ПЕРЕНАПРАВЛЕНИЯ
        # Жесть, но почему-то работет только если поставить "/" в конце
        location /service1/ {
            proxy_pass http://localhost:8001/;
            proxy_cache             all;                    # Каждый запрос
            proxy_cache_valid       any 1h;                 # Хранится 1h
        }

        location /service2/ {
            proxy_pass http://localhost:8002/;
            proxy_cache             all;                    # Каждый запрос
            proxy_cache_valid       any 1h;                 # Хранится 1h
        }

        # status
        location = /status {
            stub_status;
        }
    }


    # SERVICE 1
    server {
        listen 8001;

        location / {
            root /home/igor/Web/project/server1;
        }

        # Ссылка на общую страничку для Сервиса1/2
        location /temp {
            root /home/igor/Web/project;
        }
    }

    # SERVICE 2
    server {
        listen 8002;

        location / {
            root /home/igor/Web/project/server2;
        }

        # Ссылка на общую страничку для Сервиса1/2
        location /temp {
            root /home/igor/Web/project;
        }
    }
}